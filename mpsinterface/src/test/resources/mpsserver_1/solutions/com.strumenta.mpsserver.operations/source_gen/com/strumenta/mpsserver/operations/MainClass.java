package com.strumenta.mpsserver.operations;

/*Generated by MPS */

import jetbrains.mps.project.Project;
import jetbrains.mps.tool.environment.Environment;
import java.util.Objects;
import org.apache.log4j.ConsoleAppender;
import org.apache.log4j.Priority;
import org.apache.log4j.LogManager;
import org.apache.log4j.Level;
import java.io.File;

public class MainClass {
  private static Project getProject(Environment ideaEnvironment) {
    String enableExtraLogging = System.getenv("MPSSERVER_EXTRALOGGING");
    if (Objects.equals(enableExtraLogging, "enabled")) {
      ConsoleAppender consoleAppender = new ConsoleAppender();
      consoleAppender.setThreshold(Priority.DEBUG);
      LogManager.getRootLogger().setLevel(Level.DEBUG);
      LogManager.getRootLogger().addAppender(consoleAppender);
    }
    String projectFilePath = System.getenv("MPSSERVER_PROJECT_FILE_PATH");
    if (projectFilePath == null) {
      projectFilePath = "";
    }

    File projectFile = new File(projectFilePath).getAbsoluteFile();
    System.out.println("Project file " + projectFile);
    Project project = ideaEnvironment.openProject(projectFile);
    System.out.println("Project " + project);
    return project;
  }

  public static void mpsMain(Environment ideaEnvironment) {
    String operation = System.getenv("MPSSERVER_OPERATION");
    if (operation != null && !(operation.isBlank())) {
      if (operation.equals("make_project")) {
        new MakeOperationsExecutor().makeProject(getProject(ideaEnvironment));
      } else {
        throw new RuntimeException("Unknown operation: " + operation);
      }
    } else {
      throw new RuntimeException("No operation specified");
    }
  }
}
