package com.strumenta.mpsserver.logic;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.util.Consumer;
import java.util.List;
import jetbrains.mps.errors.item.NodeReportItem;
import jetbrains.mps.errors.item.ReportItem;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;
import jetbrains.mps.lang.test.runtime.TestsErrorsChecker;
import jetbrains.mps.internal.collections.runtime.Sequence;

public class NodeChecker {

  public void check(final SNode node, final Consumer<List<NodeReportItem>> resultConsumer) {
    if (node == null) {
      throw new IllegalArgumentException("node should not be null");
    }
    final List<ReportItem> reportItems = ListSequence.fromList(new LinkedList<ReportItem>());
    TestsErrorsChecker tec = new TestsErrorsChecker(node);
    resultConsumer.consume(Sequence.fromIterable(tec.getAllErrors()).toListSequence());
  }
}
